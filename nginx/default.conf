############## 새로 도전
upstream blindchess {
    server backend:8000;
}

upstream ws_server {
    server asgiserver:8080;
}

server {
  listen 80;

  #server_name _; # 모든 도메인 혹은 ip로 들어오는 요청에 대해 처리해 줍니다.
  server_name backend.blindchess.shop;
  # 모든 도메인 혹은 ip로 들어오는 요청에 대해 처리해 줍니다.
  client_max_body_size 30M;

  location / { # nginx로 요청이 들어왔을 때
    proxy_pass http://backend:8000; # backend 컨테이의 8000번 포트로 전달합니다.
  }
  
  # ws로 들어오면 웹소켓 연결처리 ASGI서버로 프록시
  location /ws/ {
        proxy_pass http://asgiserver:8080;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
	      proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $server_name;
        proxy_redirect off;

        }

  location /static/ { # 브라우저에서 /static/ 경로로 요청이 들어왔을 때
    alias /usr/src/app/static/; # /static/ 경로에 있는 파일들을 보여줍니다.
  }

  location /media/ { # 브라우저에서 /media/ 경로로 요청이 들어왔을 때
    alias /usr/src/app/media/; # /media/ 경로에 있는 파일들을 보여줍니다.
  }

}


######################고쳐보기
# upstream blindchess {
#     server blindchess:8000;
# }

# server {
#   listen 80;
#   # server_name blindchess
#   # 모든 도메인 혹은 ip로 들어오는 요청에 대해 처리해 줍니다.
#   # client_max_body_size 30M;

#   location / { # nginx로 요청이 들어왔을 때
#     proxy_pass http://blindchess:8000; # backend 컨테이의 8000번 포트로 전달합니다.
#     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#     proxy_set_header Host $host;
#     proxy_redirect off;
#     # try_files $uri $uri/ /chess_frontend/user/login.html;  # URL 경로에 해당하는 파일을 찾지 못하면 user/login.html 파일을 서빙합니다.

#   }
#   # ws로 들어오면 웹소켓 연결처리 ASGI서버로 프록시
#   location /ws/ {
#         proxy_pass http://asgiserver:8080;
#         proxy_http_version 1.1;
#         proxy_set_header Upgrade $http_upgrade;
#         proxy_set_header Connection "upgrade";
# 	      proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header Host $host;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Host $server_name;
#         proxy_redirect off;

#         }
# #   location /user/ {
# #     alias /usr/src/app/chess_frontend/user/;
# #     try_files $uri $uri/ /user/login.html; # 요청된 파일이 없을 때 기본적으로 login.html을 제공
# #     }
# #   location /user/join.html {
# #     alias /usr/src/app/chess_frontend/user/join.html;  # join.html 파일을 제공합니다
# # }
#   location /static/ { # 브라우저에서 /static/ 경로로 요청이 들어왔을 때
#     alias /usr/src/app/static/; # /static/ 경로에 있는 파일들을 보여줍니다.
#   }

#   location /media/ { # 브라우저에서 /media/ 경로로 요청이 들어왔을 때
#     alias /usr/src/app/media/; # /media/ 경로에 있는 파일들을 보여줍니다.
#   }

# }


#############################
# upstream blindchess {
#     server web:8000;
# }

# # upstream ws_server {
# #     server asgiserver:8080;
# # }
# # 경로만 잘라서

# # proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=tool_cache:10m max_size=10g inactive=60m use_temp_path=off;


# server {
#   listen 80;
#   server_name blindchess.shop; # www.blindchess.shop 도메인으로 들어오는 요청을 처리해줍니다.

#   location{
#     return 301 https://$host$request_uri; # www를 붙인 url로 redirection 해줍니다.
# }

#   #certbot
#   location /.well-known/acme-challenge/ {
#     root /var/www/certbot;
#   }
# }
# server {
#   listen 443 ssl;
#   server_name blindchess.shop;

#   location / {
#   proxy_pass http://blindchess;
#   proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#   proxy_set_header Host $host;
#   proxy_redirect off;
#   }

#   location /static/ { # 브라우저에서 /static/ 경로로 요청이 들어왔을 때
#     alias /usr/src/app/static/; # /static/ 경로에 있는 파일들을 보여줍니다.
#   }

#   location /media/ { # 라우저에서 /media/ 경로로 요청이 들어왔을 때
#     alias /usr/src/app/media/; # /media/ 경로에 있는 파일들을 보여줍니다.
#   }
#   ssl_certificate /etc/letsencrypt/live/blindchess.shop/fullchain.pem;
#   ssl_certificate_key /etc/letsencrypt/live/blindchess.shop/privkey.pem;
#   include /etc/letsencrypt/options-ssl-nginx.conf;
#   ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
# }


####################
# upstream blindchess {
#     server web:8000;
# }

# server {
#   listen 80;
#   server_name blindchess.shop; # www.blindchess.shop 도메인으로 들어오는 요청을 처리해줍니다.

#   location{
#     return 301 https://$host$request_uri; # www를 붙인 url로 redirection 해줍니다.
# }

#   #certbot
#   location /.well-known/acme-challenge/ {
#     root /var/www/certbot;
#   }
# }

# server {
#   listen 443 ssl;
#   server_name blindchess.shop;

#   location / {
#   proxy_pass http://blindchess;
#   proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#   proxy_set_header Host $host;
#   proxy_redirect off;
#   }

#   location /static/ { # 브라우저에서 /static/ 경로로 요청이 들어왔을 때
#     alias /usr/src/app/static/; # /static/ 경로에 있는 파일들을 보여줍니다.
#   }

#   location /media/ { # 라우저에서 /media/ 경로로 요청이 들어왔을 때
#     alias /usr/src/app/media/; # /media/ 경로에 있는 파일들을 보여줍니다.
#   }
#   ssl_certificate /etc/letsencrypt/live/blindchess.shop/fullchain.pem;
#   ssl_certificate_key /etc/letsencrypt/live/blindchess.shop/privkey.pem;
#   include /etc/letsencrypt/options-ssl-nginx.conf;
#   ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
# }

####################################### 가동되는 코드
# upstream blindchess {
#     server web:8000;
# }

# server {
#   listen 80;
#   #server_name _; # 모든 도메인 혹은 ip로 들어오는 요청에 대해 처리해 줍니다.
# # 
#   # client_max_body_size 30M;

#   location / { # nginx로 요청이 들어왔을 때
#     proxy_pass http://blindchess; # backend 컨테이의 8000번 포트로 전달합니다.
#     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#     proxy_set_header Host $host;
#     proxy_redirect off;

#   }

#   location / {
#         try_files $uri $uri/ /user/login.html;  # URL 경로에 해당하는 파일을 찾지 못하면 user/login.html 파일을 서빙합니다.
#     }

#   location /user/ {
#       alias /usr/src/app/chess_frontend/user/;  # user 디렉토리의 파일들을 제공합니다.
#       try_files $uri $uri/ /user/login.html;     # 요청된 파일이 없을 때 login.html을 제공합니다.
#   }
# #   location /user/ {
# #     alias /usr/src/app/chess_frontend/user/;
# #     try_files $uri $uri/ /user/login.html; # 요청된 파일이 없을 때 기본적으로 login.html을 제공
# #     }
# #   location /user/join.html {
# #     alias /usr/src/app/chess_frontend/user/join.html;  # join.html 파일을 제공합니다
# # }
#   location /static/ { # 브라우저에서 /static/ 경로로 요청이 들어왔을 때
#     alias /usr/src/app/static/; # /static/ 경로에 있는 파일들을 보여줍니다.
#   }

#   location /media/ { # 브라우저에서 /media/ 경로로 요청이 들어왔을 때
#     alias /usr/src/app/media/; # /media/ 경로에 있는 파일들을 보여줍니다.
#   }

# }
#######################
# server {
#     listen 80;
#     server_name localhost;

#     location / {
#         root /usr/share/nginx/html;
#         index index.html;
#     }
# }