version: '3.8'

services:
  nginx:
    build: ./nginx
    volumes:
      - static_volume:/usr/src/app/static
      - media_volume:/usr/src/app/media
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    ports:
      - 80:80
      - 443:443
    depends_on:
      - web

  # https 인증위한 과정
  certbot:
    image: certbot/certbot
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/certbot
  web:
    build: .
    # command: python manage.py runserver 0.0.0.0:8000
    # 프로젝트 폴더의 wsgi와 연결시키는거임
    # 이제부터는 docker-compose -f docker-compose.prod.yml build 입력한다
    # 이제부터는 docker-compose -f docker-compose.prod.yml up 입력한다

    command: gunicorn blindchess.wsgi:application --bind 0.0.0.0:8000
    ports:
      - 8000:8000
    working_dir: /usr/src/app
    volumes:
      - ./:/usr/src/app/
    env_file:
      - ./.env.prod
    volumes:
      - ./:/usr/src/app/
      - static_volume:/usr/src/app/static
      - media_volume:/usr/src/app/media
    expose:
      - 8000
    depends_on:
      - db
  db:
    image: postgres:14.5-alpine
    volumes:
      - postgres_db:/var/lib/postgresql/data
    # environment:
    # 이설정으로 postgres에서 만들고
    # 장고에서 사진 env로 만든다 생각
    env_file:
      - ./.env.postgres.prod
    # 나중에 db내용 보고싶을떄 열어두는 포트
    ports:
      - "5432:5432"

volumes:
  # 선언해줌
  postgres_db:
  static_volume:
  media_volume: